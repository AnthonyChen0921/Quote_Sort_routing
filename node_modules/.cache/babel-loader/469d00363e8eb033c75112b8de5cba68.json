{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chene\\\\Documents\\\\React\\\\Quote_Sort_routing\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, isSortingAscending) => {\n  return quotes.sort((a, b) => {\n    if (isSortingAscending) {\n      return a.id > b.id ? 1 : -1;\n    } else {\n      return a.id < b.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParama = new URLSearchParams(location.search);\n  const isSortingAscending = queryParama.get(\"sort\") === \"asc\";\n  const quotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const sortHandler = e => {\n    history.push(` ${location.path}${isSortingAscending ? \"desc\" : \"asc\"}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortHandler,\n        className: classes.sortButton,\n        children: [\"Sort \", isSortingAscending ? \"Desending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","isSortingAscending","sort","a","b","id","QuoteList","props","history","location","queryParama","URLSearchParams","search","get","sortHandler","e","push","path","sorting","sortButton","list","map","quote","author","text"],"sources":["C:/Users/Chene/Documents/React/Quote_Sort_routing/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, isSortingAscending) => {\n  return quotes.sort((a, b) => {\n    if (isSortingAscending) {\n      return a.id > b.id ? 1 : -1;\n    } else {\n      return a.id < b.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParama = new URLSearchParams(location.search);\n  const isSortingAscending = queryParama.get(\"sort\") === \"asc\";\n  const quotes = sortQuotes(props.quotes, isSortingAscending);\n  const sortHandler = (e) => {\n    history.push(` ${location.path}${(isSortingAscending ? \"desc\" : \"asc\")}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler} className={classes.sortButton}>\n          Sort {isSortingAscending ? \"Desending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,kBAAT,KAAgC;EACjD,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC3B,IAAIH,kBAAJ,EAAwB;MACtB,OAAOE,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAT,GAAc,CAAd,GAAkB,CAAC,CAA1B;IACD,CAFD,MAEO;MACL,OAAOF,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAT,GAAc,CAAd,GAAkB,CAAC,CAA1B;IACD;EACF,CANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,OAAO,GAAGb,UAAU,EAA1B;EACA,MAAMc,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAMc,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EACA,MAAMX,kBAAkB,GAAGS,WAAW,CAACG,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;EACA,MAAMb,MAAM,GAAGD,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAeC,kBAAf,CAAzB;;EACA,MAAMa,WAAW,GAAIC,CAAD,IAAO;IACzBP,OAAO,CAACQ,IAAR,CAAc,IAAGP,QAAQ,CAACQ,IAAK,GAAGhB,kBAAkB,GAAG,MAAH,GAAY,KAAO,EAAvE;EACD,CAFD;;EAGA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEH,OAAO,CAACoB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEJ,WAAjB;QAA8B,SAAS,EAAEhB,OAAO,CAACqB,UAAjD;QAAA,oBACQlB,kBAAkB,GAAG,WAAH,GAAiB,WAD3C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAEH,OAAO,CAACsB,IAAvB;MAAA,UACGpB,MAAM,CAACqB,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAACjB,EAFZ;QAGE,MAAM,EAAEiB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAACjB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA5BD;;GAAMC,S;UACYX,U,EACCC,W;;;KAFbU,S;AA8BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}