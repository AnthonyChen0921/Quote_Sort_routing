{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chene\\\\Documents\\\\React\\\\Quote_Sort_routing\\\\src\\\\Pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../libs/api\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyData = [{\n  id: \"q1\",\n  author: \"Author 1\",\n  text: \"Quote 1\"\n}, {\n  id: \"q2\",\n  author: \"Author 2\",\n  text: \"Quote 2\"\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    snedRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    snedRequest();\n  }, [snedRequest]);\n  if (status === '') return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DummyData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"/4WJd+pbx5kOS//yEKMFXNg03XI=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","getAllQuotes","useEffect","DummyData","id","author","text","AllQuotes","snedRequest","status","data","loadedQuote","error"],"sources":["C:/Users/Chene/Documents/React/Quote_Sort_routing/src/Pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../libs/api\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DummyData = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Author 1\",\r\n    text: \"Quote 1\",\r\n  },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Author 2\",\r\n    text: \"Quote 2\",\r\n  },\r\n];\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    snedRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    snedRequest();\r\n  }, [snedRequest]);\r\n\r\n  if(status === '')\r\n\r\n  return <QuoteList quotes={DummyData} />;\r\n};\r\nexport default AllQuotes;\r\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,SAAS,GAAG,CAChB;EACEC,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,UAFV;EAGEC,IAAI,EAAE;AAHR,CADgB,EAMhB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,UAFV;EAGEC,IAAI,EAAE;AAHR,CANgB,CAAlB;;AAaA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IACJC,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,WAHF;IAIJC;EAJI,IAKFZ,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;EAOAC,SAAS,CAAC,MAAM;IACdM,WAAW;EACZ,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;EAIA,IAAGC,MAAM,KAAK,EAAd,EAEA,oBAAO,QAAC,SAAD;IAAW,MAAM,EAAEN;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAfD;;GAAMI,S;UAMAP,O;;;KANAO,S;AAgBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}